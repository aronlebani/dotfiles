#!/usr/bin/ruby

# frozen_string_literal: true

require 'optparse'
require 'net/http'
require 'json'
require 'open3'

def clone(url, path, dry_run: false)
  puts("cloning #{url} into #{path}")

  return if dry_run

  Open3.popen3('git', 'clone', url, chdir: path) do |_, _, stderr, wait_th|
    unless wait_th.value.success?
      if stderr.readline.include?('already exists')
        puts('...repository already exists')
      else
        puts('...failed to clone repository')
      end
    end
  end
end

def get_repositories(token)
  headers = { Authorization: "Bearer #{token}" }
  github_repos_url =
    'https://api.github.com/user/repos?per_page=100&affiliation=owner,collaborator'

  res = Net::HTTP.get(URI(github_repos_url), headers)

  JSON.parse(res)
end

def ssh_url(repository)
  repository['ssh_url']
end

def main(options)
  token = options[:token]
  dest = options[:dest] || '.'
  dry_run = options[:"dry-run"]

  get_repositories(token).each do |repo|
    clone(ssh_url(repo), dest, dry_run: dry_run)
  end
end

if __FILE__ == $0
  parser = OptionParser.new do |opts|
    opts.banner = 'Usage: gitinstall [OPTIONS]'
    opts.on('-t TOKEN', '--token=TOKEN', 'github personal access token')
    opts.on('-d DEST', '--dest=DEST', 'destination directory')
    opts.on('--dry-run', 'dry run')
  end

  options = {}
  parser.parse!(into: options)

  main(options)
end

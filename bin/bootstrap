#!/bin/bash

# Automates user configuration and software installation after a fresh OS reinstall. Works for
# debian based systems.
#
# WARNING: This hasn't been tested. At this stage I'm just using it as a reference to manually do
# the config and software installation.

install_full ()
{
    apt install -y \
        neofetch \
        python3 \
        sqlite \
        redshift \
        usb-creator-gtk \
        ristretto \
        bluez* \
        blueman \
        qalc \
        ledger \
        arduino
        guitarix \
        libreoffice \
        freecad \
        fritzing \
        ardour \
        inkscape

    # Install dbeaver
    # https://dbeaver.io/download/

    # Install spotify client
    # https://www.spotify.com/au/download/linux/
}

install_essential ()
{
    # From the repositories
    apt update && apt install -y \
        git \
        vim \
        curl \
        build-essential \
        evolution \
        ruby \
        sbcl \
        newsboat \
        ripgrep \
        xclip \
        pass \
        pass-extension-otp \
        qutebrowser

    # Install seafile
    # https://help.seafile.com/syncing_client/install_linux_client/
    echo "deb [arch=amd64 signed-by=/usr/share/keyrings/seafile-keyring.asc] https://linux-clients.seafile.com/seafile-deb/$(lsb_release -cs)/ stable main" | sudo tee /etc/apt/sources.list.d/seafile.list > /dev/null \
        && apt update \
        && apt install -y seafile-gui

    # Install rust
    # https://www.rust-lang.org/tools/install
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh

    # Install golang
    # https://go.dev/doc/install
    curl -OL https://go.dev/dl/go1.21.3.linux-amd64.tar.gz \
        && tar -C /usr/local -xzf go1.21.3.linux-amd64.tar.gz

    # Install quicklisp package manager
    # https://www.quicklisp.org/beta
    curl -o /tmp/ql.lisp http://beta.quicklisp.org/quicklisp.lisp
    sbcl --no-sysinit --no-userinit --load /tmp/ql.lisp \
       --eval '(quicklisp-quickstart:install :path "~/.quicklisp")' \
       --quit

    # Install vimplug
    # https://github.com/junegunn/vim-plug
    curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
        https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

    # Need to build vim from source for python support, since the version in
    # the repositories doesn't have it. Instructions can be found here
    # https://github.com/vim/vim/blob/124371c5a149a8c0c75c04b6c90ac11e71a0aa97/src/INSTALL.
}

admin ()
{
    mkdir -p "$HOME/src"

    # Symlink newsboat data and feeds
    ln -s ~/Seafile/Wiki/data/rss.txt ~/.config/newsboat/urls
    ln -s ~/Seafile/Wiki/data/cache.db ~/.local/share/newsboat/cache.db

    # Symlink qutebrowser bookmarks
    ln -s ~/Seafile/Wiki/data/quickmarks ~/.config/qutebrowser/quickmarks

    # Remove unused directories
    rm -rf \
        "$HOME/Documents" \
        "$HOME/Music" \
        "$HOME/Videos" \
        "$HOME/Templates" \
        "$HOME/Pictures" \
        "$HOME/Public"
}

human_things ()
{
    echo "To do:"
    echo "* [ ] Import gpg keys"
    echo "* [ ] Run :PlugInstall in vim"
    echo "* [ ] Sign into seafile, evolution"
    echo "* [ ] Set up email signature"
    echo "* [ ] Give me sudo permissions"
    echo "          su -"
    echo "          sudo usermod -aG sudo aron"
}

admin
install_essential

if [ $1 = "--full" ]
then
    install_full
fi

human_things
